#!/usr/bin/env ruby

=begin

  Usage:
  collective [options] [check] | monitor | restart | status | stop

  e.g.
  collective --dry-run --verbose --env production --name it --chdir /tmp/it check
  collective /opt/rails/it/current/config/it monitor
  Options must preceed the command.

  Note: the pid file depends on chdir, env, and name, so you have to specify them for any command to work.
  They can be specified in a configuration file.

=end

# We don't use Bundler because that is up to the client.
# The client can use 'bundle exec collective' if desired.
File.expand_path(File.dirname(__FILE__)+"/../lib").tap { |d| $:.unshift(d) if ! $:.member?(d) }
require "collective"

my = Collective::Configuration.parse(ARGV)

# TODO use my.options_for_daemon_spawn
# TODO use my.args_for_daemon_spawn

if ! my.dry_run then
  case ARGV.first
  when "stop"
    Collective::Monitor.new(my).stop_all
  when "monitor"
    Collective::Monitor.new(my).monitor
  else
    Kernel.abort "Unknown command #{ARGV.first}"
  end
end
